function update() {
  APP=$argv[1]
  VERSION=$argv[2]

  if [[ $(uname -a) == *"Darwin"* ]]; then
    if [[ $APP = "kubectl" ]]; then
      if [[ $(curl -LI https://storage.googleapis.com/kubernetes-release/release/v${VERSION}/bin/darwin/amd64/kubectl -o /dev/null -w '%{http_code}\n' -s) == "200" ]]; then
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/v${VERSION}/bin/darwin/amd64/kubectl" \
          && chmod +x ./kubectl \
          && mv ./kubectl /usr/local/bin/kubectl darwin-amd64
        echo "Kubectl v${VERSION} installed!"
      else
        echo "Error: kubectl version not found"
        echo "Visit https://github.com/kubernetes/kubectl/releases for release versions.."
      fi

    elif [[ $APP = "krew" ]]; then
      if [[ $(curl -LI https://github.com/kubernetes-sigs/krew/releases/v${VERSION}/download/krew.tar.gz -o /dev/null -w '%{http_code}\n' -s) == "200" ]]; then
        curl -LO "https://github.com/kubernetes-sigs/krew/releases/v${VERSION}/download/krew.tar.gz" \
          && tar -xvf krew.tar.gz krew-darwin_amd64 \
          && ./krew-darwin_amd64 install krew \
          && rm krew.tar.gz krew-darwin_amd64
        echo "Krew v${VERSION} installed!"
      else
        echo "Error: krew version not found"
        echo "Visit https://github.com/ubernetes-sigs/krew/releases for release versions.."
      fi

    elif [[ $APP = "helm" ]]; then
      if curl --output /dev/null --silent --head --fail "https://get.helm.sh/helm-v${VERSION}-darwin-amd64.tar.gz"; then
        curl -LO "https://get.helm.sh/helm-v${VERSION}-darwin-amd64.tar.gz" \
          && tar -xvf helm-v${VERSION}-darwin-amd64.tar.gz darwin-amd64/helm \
          && mv darwin-amd64/helm /usr/local/bin/helm \
          && rm -r helm-v${VERSION}-darwin-amd64.tar.gz darwin-amd64
        echo "Helm v${VERSION} installed!"
      else
        echo "Error: helm version not found"
        echo "Visit https://github.com/helm/helm/releases for release versions.."
      fi

    elif [[ $APP = "stern" ]]; then
      if curl --output /dev/null --silent --head --fail "https://github.com/stern/stern/releases/download/v${VERSION}/stern_${VERSION}_darwin_amd64.tar.gz"; then
        curl -LO "https://github.com/stern/stern/releases/download/v${VERSION}/stern_${VERSION}_darwin_amd64.tar.gz" \
          && tar -xvf stern_${VERSION}_darwin_amd64.tar.gz stern_${VERSION}_darwin_amd64/stern \
          && mv stern_${VERSION}_darwin_amd64/stern /usr/local/bin/stern \
          && rm -r stern_${VERSION}_darwin_amd64*
        echo "Stern v${VERSION} installed!"
      else
        echo "Error: stern version not found"
        echo "Visit https://github.com/stern/stern/releases for release versions.."
      fi

    elif [[ $APP = "gh" ]]; then
      echo "Now updating: gh-cli.."
      curl -s https://api.github.com/repos/cli/cli/releases/latest \
      | grep "browser_download_url.*macOS_amd64.tar.gz" \
      | cut -d : -f 2,3 \
      | tr -d '"' \
      | xargs curl -vOL

      tar -xjf gh*.tar.gz --strip-components=2 '*gh'
      mv ./gh /usr/local/bin/
      rm gh*
      echo "Github CLI updated!"
    fi

  elif [[ $(uname -a) == *"Ubuntu"* ]]; then
    echo "Haven't done Ubuntu yet, check back later!"
  fi
}
